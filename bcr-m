{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":8421658,"sourceType":"datasetVersion","datasetId":5013817}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nadagamaleldien/bcr-m?scriptVersionId=183866244\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# Braille Character Recognition\n\n## Introduction\nThis notebook demonstrates a machine learning approach to recognizing Braille characters from images.","metadata":{"_uuid":"a39d4181-b189-43c4-9d01-eaa9edb7d7df","_cell_guid":"17713ae5-45db-44ea-a04c-f4f4542f0b80","execution":{"iopub.status.busy":"2024-06-16T19:15:54.956376Z","iopub.execute_input":"2024-06-16T19:15:54.956808Z","iopub.status.idle":"2024-06-16T19:15:54.994089Z","shell.execute_reply.started":"2024-06-16T19:15:54.95677Z","shell.execute_reply":"2024-06-16T19:15:54.992712Z"},"trusted":true}},{"cell_type":"markdown","source":"## Imports\nImport the necessary libraries for data processing, model building, and evaluation.","metadata":{"_uuid":"635f23ba-3a1e-48c8-8fe8-63bb0770801f","_cell_guid":"b9d8d49f-3cd2-46c2-8ac6-96e752ec7a2e","trusted":true}},{"cell_type":"code","source":"import numpy as np\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport cv2\n\nimport tensorflow.image as tf_im\nfrom tensorflow import keras\nfrom tensorflow.keras import layers, regularizers\nfrom tensorflow.keras.applications.densenet import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import EarlyStopping\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom keras.utils import to_categorical","metadata":{"_uuid":"a0c8bd85-5055-47d4-a10d-6894e7653038","_cell_guid":"b7932244-48dd-4e87-8360-76ce5c6b10aa","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:56:03.021471Z","iopub.execute_input":"2024-06-16T20:56:03.021753Z","iopub.status.idle":"2024-06-16T20:56:03.034429Z","shell.execute_reply.started":"2024-06-16T20:56:03.021729Z","shell.execute_reply":"2024-06-16T20:56:03.033534Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data Preprocessing\n\n### Loading and Exploring the Data\nLoad the Braille character dataset and visualize some examples to understand its structure.\nThe Dataset has samples of each character with its encoded label as zeros and ones representing placeholders for dots. The data is already augmented.","metadata":{"_uuid":"00523260-b78a-47f0-a0c6-2a4fcc8a68a3","_cell_guid":"e69c3490-6af3-4373-8f3e-0a0aea02dc2f","execution":{"iopub.status.busy":"2024-06-16T19:17:26.7629Z","iopub.execute_input":"2024-06-16T19:17:26.763714Z","iopub.status.idle":"2024-06-16T19:17:26.770905Z","shell.execute_reply.started":"2024-06-16T19:17:26.76367Z","shell.execute_reply":"2024-06-16T19:17:26.769418Z"},"trusted":true}},{"cell_type":"code","source":"data, labels, training_data = [], [], []\ndata_dir = '/kaggle/input/braille-characters-dataset/augm_data'\n\nfor char_dir in os.listdir(data_dir):\n    char_path = os.path.join(data_dir, char_dir)\n    for im in os.listdir(char_path):\n        img = image.load_img(os.path.join(char_path, im), target_size=(224, 224))\n        x = image.img_to_array(img)\n        x = preprocess_input(x)\n        x = tf_im.rgb_to_grayscale(x)\n        x /= 255.0\n        training_data.append([x, char_dir])\n        \nnp.random.shuffle(training_data)","metadata":{"_uuid":"285813f6-72ca-4609-83e3-af25a63c1879","_cell_guid":"5c08303b-af43-486d-ae37-dcb9f0aa5b14","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:09:45.368533Z","iopub.execute_input":"2024-06-16T20:09:45.3692Z","iopub.status.idle":"2024-06-16T20:10:12.49181Z","shell.execute_reply.started":"2024-06-16T20:09:45.369163Z","shell.execute_reply":"2024-06-16T20:10:12.490729Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sample_img = '/kaggle/input/braille-characters-dataset/augm_data/001010/1_001010.png'\n\nimg = cv2.imread(sample_img)\n\nplt.imshow(img)\nplt.axis('off')  \nplt.show()","metadata":{"_uuid":"b1eacbea-92db-4942-8912-8d6474745d4d","_cell_guid":"d56d061f-3798-4061-b247-9058c26b6188","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:12.493251Z","iopub.execute_input":"2024-06-16T20:10:12.493625Z","iopub.status.idle":"2024-06-16T20:10:12.578637Z","shell.execute_reply.started":"2024-06-16T20:10:12.493589Z","shell.execute_reply":"2024-06-16T20:10:12.577597Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for im, label in training_data:\n    data.append(im)\n    labels.append(label)\n    \nX = np.array(data)\ny = np.array(labels)","metadata":{"_uuid":"afd8ddd9-97ee-4040-a93c-4db6cd416f21","_cell_guid":"301755f9-f1e7-4e63-9c08-075d769b62fe","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:12.581156Z","iopub.execute_input":"2024-06-16T20:10:12.581798Z","iopub.status.idle":"2024-06-16T20:10:14.577306Z","shell.execute_reply.started":"2024-06-16T20:10:12.581762Z","shell.execute_reply":"2024-06-16T20:10:14.576208Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"le = LabelEncoder()\ny = le.fit_transform(y)\ny = to_categorical(y, num_classes=64)","metadata":{"_uuid":"33683d70-287a-4c90-8f98-67f3680559c0","_cell_guid":"03cb001b-e9af-4645-8296-1539b4a19df9","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:14.578496Z","iopub.execute_input":"2024-06-16T20:10:14.578796Z","iopub.status.idle":"2024-06-16T20:10:14.586913Z","shell.execute_reply.started":"2024-06-16T20:10:14.57877Z","shell.execute_reply":"2024-06-16T20:10:14.585881Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X.shape, y.shape","metadata":{"_uuid":"b3b256bc-8a6f-472e-814c-16501ac0dc21","_cell_guid":"39f9c4df-a58f-4506-b9a0-fe6041ba9404","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:14.588076Z","iopub.execute_input":"2024-06-16T20:10:14.5884Z","iopub.status.idle":"2024-06-16T20:10:14.59585Z","shell.execute_reply.started":"2024-06-16T20:10:14.588376Z","shell.execute_reply":"2024-06-16T20:10:14.594955Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"combined_data = list(zip(X, y))\nnp.random.shuffle(combined_data)","metadata":{"_uuid":"98924532-1de3-47f0-ba35-fdd606120937","_cell_guid":"a97c2cc3-1d57-4444-a434-313c17039123","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:14.596951Z","iopub.execute_input":"2024-06-16T20:10:14.5972Z","iopub.status.idle":"2024-06-16T20:10:14.607195Z","shell.execute_reply.started":"2024-06-16T20:10:14.597177Z","shell.execute_reply":"2024-06-16T20:10:14.606425Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# desired_size = 6519  \n\n# subset_data = combined_data[:desired_size]\n\n# X, y = zip(*subset_data)\n\n# X = np.array(X)\n# y = np.array(y)","metadata":{"_uuid":"87f834b3-4275-4446-a665-2d6c63c11b81","_cell_guid":"0333ec58-d9b3-4b8c-ba6d-7b18080b9372","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:14.608353Z","iopub.execute_input":"2024-06-16T20:10:14.60859Z","iopub.status.idle":"2024-06-16T20:10:14.616551Z","shell.execute_reply.started":"2024-06-16T20:10:14.608569Z","shell.execute_reply":"2024-06-16T20:10:14.615795Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Splitting\nSplit the data into training and test sets to prepare it for model training.","metadata":{"_uuid":"d75c6268-80bb-4f97-8700-3f837baa7d42","_cell_guid":"4b8e50ae-f07f-4d67-bec1-db9f4b9117e2","trusted":true}},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    test_size=0.2,\n                                                    stratify=y,\n                                                    random_state=42)","metadata":{"_uuid":"6265a21a-66c6-4672-80c0-620bd5450bec","_cell_guid":"f58d0c7b-2da7-40ad-820e-ca60af333a1e","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:14.617596Z","iopub.execute_input":"2024-06-16T20:10:14.617877Z","iopub.status.idle":"2024-06-16T20:10:15.422923Z","shell.execute_reply.started":"2024-06-16T20:10:14.617853Z","shell.execute_reply":"2024-06-16T20:10:15.422116Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Model Architecture\n\n### Building the CNN Model\nDefine the Convolutional Neural Network (CNN) model architecture for Braille character recognition.","metadata":{"_uuid":"8b21729a-75b6-4aba-9610-0e6f11551a1f","_cell_guid":"b1eefe77-8069-4012-92cb-ee3c16bee23f","trusted":true}},{"cell_type":"code","source":"model = keras.Sequential([\n    layers.Input(shape=(224, 224, 1)),  # Adjusting the input shape for grayscale images\n    layers.Conv2D(filters=64, kernel_size=(5, 5), padding='same', activation='relu', kernel_regularizer=regularizers.l2(0.0015)),\n    layers.BatchNormalization(),\n    layers.Conv2D(filters=64, kernel_size=(3, 3), padding='same', activation='relu', kernel_regularizer=regularizers.l2(0.0015)),\n    layers.BatchNormalization(),\n    layers.MaxPooling2D(),\n    layers.Conv2D(filters=64, kernel_size=(3, 3), padding='same', activation='relu', kernel_regularizer=regularizers.l2(0.0013)),\n    layers.BatchNormalization(),\n    layers.MaxPooling2D(),\n    layers.Conv2D(filters=64, kernel_size=(3, 3), padding='same', activation='relu', kernel_regularizer=regularizers.l2(0.0013)),\n    layers.BatchNormalization(),\n    layers.MaxPooling2D(),\n    layers.Flatten(),\n    layers.Dense(units=576, activation=\"relu\", kernel_regularizer=regularizers.l2(0.0011)),\n    layers.BatchNormalization(),\n    layers.Dropout(0.6),\n    layers.Dense(units=288, activation=\"relu\", kernel_regularizer=regularizers.l2(0.0011)),\n    layers.BatchNormalization(),\n    layers.Dropout(0.4),\n    layers.Dense(units=64, activation=\"sigmoid\")  \n])\nmodel.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","metadata":{"_uuid":"91618c70-c25f-45ff-a9b6-6d489c366bd8","_cell_guid":"3306eafc-4144-4d74-8aca-7bd051b5bd73","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:15.425554Z","iopub.execute_input":"2024-06-16T20:10:15.425848Z","iopub.status.idle":"2024-06-16T20:10:15.588431Z","shell.execute_reply.started":"2024-06-16T20:10:15.425823Z","shell.execute_reply":"2024-06-16T20:10:15.587739Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Training the Model\nTrain the CNN model using the training dataset and validate it on the test dataset.","metadata":{"_uuid":"e24ec920-bb0b-4523-b29f-9bef92f6e6a5","_cell_guid":"81a648c6-a71d-4a06-b8f1-155c0112ecc2","trusted":true}},{"cell_type":"code","source":"es1 = EarlyStopping(patience=20, monitor=\"val_accuracy\", mode=\"auto\")\nes2 = EarlyStopping(patience=20, monitor=\"val_loss\", mode=\"auto\")\n\nhistory = model.fit(x=X_train,\n                    y=y_train,\n                    epochs=1000,\n                    validation_split=0.1,\n                    callbacks=[es1],\n                    batch_size=32, \n                    verbose=1,      \n                    shuffle=True,   \n                    )","metadata":{"_uuid":"a5c791af-ac7c-45c4-a085-1b8012e81377","_cell_guid":"cbb05b43-b34b-40ee-b8c7-611031e45aa2","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:10:15.589468Z","iopub.execute_input":"2024-06-16T20:10:15.589746Z","iopub.status.idle":"2024-06-16T20:55:50.434289Z","shell.execute_reply.started":"2024-06-16T20:10:15.589721Z","shell.execute_reply":"2024-06-16T20:55:50.433376Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Evaluation\n\n### Accuracy and Loss Curves\nPlot the training and validation accuracy and loss curves to analyze the model's performance.","metadata":{"_uuid":"c9c2a9c2-8722-4afc-b75c-288abec81d5f","_cell_guid":"607ce2c4-eb89-41be-8e7b-2d733442e6ca","execution":{"iopub.status.busy":"2024-06-16T19:43:54.806502Z","iopub.execute_input":"2024-06-16T19:43:54.807446Z","iopub.status.idle":"2024-06-16T19:43:54.814072Z","shell.execute_reply.started":"2024-06-16T19:43:54.807408Z","shell.execute_reply":"2024-06-16T19:43:54.812553Z"},"trusted":true}},{"cell_type":"code","source":"time = np.arange(1, len(history.history['loss'])+1)","metadata":{"_uuid":"d8519a00-bb1b-4e56-bf66-39a1c4b4fece","_cell_guid":"7a070356-3e23-4bdb-be18-e0ea7569ffa4","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:55:50.436099Z","iopub.execute_input":"2024-06-16T20:55:50.436724Z","iopub.status.idle":"2024-06-16T20:55:50.441502Z","shell.execute_reply.started":"2024-06-16T20:55:50.436685Z","shell.execute_reply":"2024-06-16T20:55:50.440602Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Accuracy Curves","metadata":{"_uuid":"f1d1b36e-547a-4563-85c2-d3b5695ec916","_cell_guid":"01dbada0-134e-41ea-9a02-a0851919ec57","trusted":true}},{"cell_type":"code","source":"sns.lineplot(data=history.history, x=time, y='loss')\nsns.lineplot(data=history.history, x=time, y='val_loss')\nplt.title('Loss fitting history')\nplt.legend(labels=['Loss', 'Validation loss'])","metadata":{"_uuid":"ab7e6888-4011-42c8-a5a9-74a342e4d12c","_cell_guid":"bd9a3da8-23b0-4f96-9c7b-368e89a1665a","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:55:50.442691Z","iopub.execute_input":"2024-06-16T20:55:50.443033Z","iopub.status.idle":"2024-06-16T20:55:50.815768Z","shell.execute_reply.started":"2024-06-16T20:55:50.443007Z","shell.execute_reply":"2024-06-16T20:55:50.814903Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sns.lineplot(data=history.history, x=time, y='accuracy')\nsns.lineplot(data=history.history, x=time, y='val_accuracy')\nplt.title('Accuracy fitting history')\nplt.legend(labels=['Accuracy', 'Valuation accuracy'])","metadata":{"_uuid":"1d6b64a7-20ef-4eca-8e6f-a640dd876eed","_cell_guid":"73f09513-8343-4d39-ba39-0743ed1057f2","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:55:50.817119Z","iopub.execute_input":"2024-06-16T20:55:50.817546Z","iopub.status.idle":"2024-06-16T20:55:51.167833Z","shell.execute_reply.started":"2024-06-16T20:55:50.81751Z","shell.execute_reply":"2024-06-16T20:55:51.166871Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Model Evaluation\nEvaluate the model on the test set and print the results.","metadata":{"_uuid":"c14e0998-7f46-462d-ac89-7f46926de09e","_cell_guid":"5ee6be7c-a95d-4f6b-aaff-a318029a6831","trusted":true}},{"cell_type":"code","source":"model.evaluate(X_test, y_test)","metadata":{"_uuid":"65887382-84ab-46aa-9ac8-8d3f80dece65","_cell_guid":"eb465a47-a9fe-4866-ba6a-508a4f1dde07","collapsed":false,"execution":{"iopub.status.busy":"2024-06-16T20:55:51.171908Z","iopub.execute_input":"2024-06-16T20:55:51.172205Z","iopub.status.idle":"2024-06-16T20:56:03.011323Z","shell.execute_reply.started":"2024-06-16T20:55:51.17218Z","shell.execute_reply":"2024-06-16T20:56:03.010433Z"},"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}